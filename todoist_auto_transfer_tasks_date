function myFunction() {
  var spreadsheetId = "your id";
  //
  var need_projects_name_for_home = kts.getProjectsFor(2, spreadsheetId);
  var need_projects_name_for_work = kts.getProjectsFor(3, spreadsheetId);
  var default_name = kts.getParamValue(6, spreadsheetId, 2).toString();
  var token = kts.getParamValue(10, spreadsheetId, 2).toString();
  initializeSheets(spreadsheetId);
  var conifig_param_url_fetch = [[17, 2],[18, 2], [19, 2]];
  if(!kts.checkUrlfetch(spreadsheetId, true, conifig_param_url_fetch)) return;
  var obj_data = kts.getData(token, 7, spreadsheetId, conifig_param_url_fetch);
  //
  var operation_status = Number(kts.getParamValue(15, spreadsheetId));
  if(operation_status == 0){
    grabTasks(obj_data, need_projects_name_for_home, spreadsheetId, token, false, default_name, "home", false, conifig_param_url_fetch);
    setNextOperationStatus(spreadsheetId, operation_status);
    return;
  }
  //
  if(operation_status == 1){
    grabTasks(obj_data, need_projects_name_for_work, spreadsheetId, token, false, default_name, "work", false, conifig_param_url_fetch);
    setNextOperationStatus(spreadsheetId, operation_status);
    return;
  }
}
function setNextOperationStatus(spreadsheetId, operation_status)
{
  var next_opertaion_status = operation_status + 1;
  if(next_opertaion_status > 1) next_opertaion_status = 0;
  kts.setParamConfig("operation_status", next_opertaion_status, 15, spreadsheetId);
}
function initializeSheets(spreadsheetId)
{
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  kts.checkExistenceSheets(ss, "config");
}
function grabTasks(obj_data, need_projects_name, spreadsheetId, token, completed_tasks, default_name, type, is_refreshing, conifig_param_url_fetch) {
  if(obj_data == null) return;
  var filtered_tasks = [];
  var accept_project_entries = kts.getAcceptProjects(need_projects_name, obj_data.data_p);
   
  for each(var row in obj_data.data.items) {
    var item = kts.getTaskItem(row, completed_tasks, token, spreadsheetId, is_refreshing, obj_data.data_p, obj_data.data_l, obj_data.data_c, default_name, conifig_param_url_fetch);
    if(item == null) continue;
    if (item.is_deleted == 1) continue;
    if(default_name != item.user_name) continue;
    var is_good = kts.checkAcceptProjectsId(accept_project_entries, item.project_id);
    if(!is_good) continue;
    filtered_tasks = kts.insertItemArray(filtered_tasks, item);  
  }
  //
  if(filtered_tasks.length > 0) processTasks(filtered_tasks, true, spreadsheetId, token, type, conifig_param_url_fetch);  
}
function processTasks(arr, check_exists, spreadsheetId, token, type, conifig_param_url_fetch)
{
  var p = getP(spreadsheetId, type);
  var day_max = kts.getMaxDay(spreadsheetId, type);
  var now = new Date();
  var arr_days = kts.createEmptyWeek(day_max, p, now);
  
  var group_tasks_out = sortTasks(arr, arr_days, type, spreadsheetId);
  
  moveTasks(group_tasks_out, token, spreadsheetId, type, conifig_param_url_fetch);
}
function moveTasks(arr, token, spreadsheetId, type, conifig_param_url_fetch)
{
  kts.updateTasks('["items"]', "item_update", token, arr, spreadsheetId, conifig_param_url_fetch);
}
function sortTasks(arr, arr_days, type, spreadsheetId)
{
  var arr_move = [];
  var arr_change = [];
  type = type.toUpperCase();
  //
  var now = new Date();
  var now_day = kts.getWeekDay(now);
  var now_month = now.getMonth() + 1;
  //var firstDay = new Date(now.getFullYear(), now.getMonth(), 1); // return first day of the month
  var now_week = kts.getWeekNumber(now); 
  var date_next_week = kts.getDate(kts.getDateNextWeek(now));
  var count_previous_days = kts.getNumberString(kts.getParamValue(9, spreadsheetId, 2));
  //
  var obj_arr = kts.arrSortAscItemsByName(arr, "date_added", "date");
  var max_min_date = obj_arr.max_min_date;
  arr = obj_arr.arr;
  for each(var item in arr){
    if(item.week_due == null || item.week_due == "") continue;
    if(item.week_due > now_week) continue;
    var index = item.day_of_week_due-1;
    if(index < 0) continue;
    arr_days[index].items.push(item);
    arr_days[index].day_count++;
    if(item.priority == 1) arr_days[index].count_p1++;
    if(item.priority == 2) arr_days[index].count_p2++;
    if(item.priority == 3) arr_days[index].count_p3++;
    if(item.priority == 4) arr_days[index].count_p4++;
  }
  var isP4 = kts.getParamValue(6, spreadsheetId, 3);
  var isP3 = kts.getParamValue(6, spreadsheetId, 4);
  var isP2 = kts.getParamValue(6, spreadsheetId, 5);
  var isP1 = kts.getParamValue(6, spreadsheetId, 6);

  //
  for(var i = 0; i < arr_days.length; i++){
      for(var j = arr_days[i].items.length - 1; j >= 0; j--){
        var need_change = false;
        if(arr_days[i].day < now_day - count_previous_days){
          need_change = true;
        }
        if(type == "WORK" && arr_days[i].day >= 6 && !need_change){
          need_change = true;
        }
        if(arr_days[i].items[j].priority == 1 && arr_days[i].count_p1 > arr_days[i].max_p1 && !need_change){
          if(isP1 > 0) need_change = true;
        }
        if(arr_days[i].items[j].priority == 2 && arr_days[i].count_p2 > arr_days[i].max_p2 && !need_change){
          if(isP2 > 0) need_change = true;
        }
        if(arr_days[i].items[j].priority == 3 && arr_days[i].count_p3 > arr_days[i].max_p3 && !need_change){
          if(isP3 > 0) need_change = true;
        }
        if(arr_days[i].items[j].priority == 4 && arr_days[i].count_p4 > arr_days[i].max_p4 && !need_change){
          if(isP4 > 0) need_change = true;
        }
        if(need_change){
          if(arr_days[i].items[j].priority == 1) arr_days[i].count_p1--;
          if(arr_days[i].items[j].priority == 2) arr_days[i].count_p2--;
          if(arr_days[i].items[j].priority == 3) arr_days[i].count_p3--;
          if(arr_days[i].items[j].priority == 4) arr_days[i].count_p4--;
          arr_days[i].day_count--;
          arr_change.push(arr_days[i].items[j]);
          arr_days[i].items.splice(j, 1);
          j = arr_days[i].items.length - 1;
        }
      }
  }
  var t1 = "";
  for (var i = 0; i < arr_change.length; i++){
    var need_change = false;
    arr_change[i].due_date_utc = date_next_week;
    //
    if(arr_change[i].day_of_week_due  < now_day - count_previous_days) continue;
    if(type == "WORK" && arr_change[i].day_of_week_due >= 6 && !need_change) continue;
    for(var j = 0; j < arr_days.length; j++){

      if(arr_days[j].day_count < arr_days[j].day_max){
        
        if(arr_change[i].priority == 1 && (arr_days[j].count_p1 + 1) <= arr_days[j].max_p1 && !need_change){
          if(isP1 > 0) need_change = true;
        }
        if(arr_change[i].priority == 2 && (arr_days[j].count_p2 + 1) <= arr_days[j].max_p2 && !need_change){
          if(isP2 > 0) need_change = true;           
        }
        if(arr_change[i].priority == 3 && (arr_days[j].count_p3 + 1) <= arr_days[j].max_p3 && !need_change){
          if(isP3 > 0) need_change = true;
        }
        if(arr_change[i].priority == 4 && (arr_days[j].count_p4 + 1) <= arr_days[j].max_p4 && !need_change){
          if(isP4 > 0) need_change = true;
        }
        if(need_change){
          if(arr_change[i].priority == 1) arr_days[j].count_p1++;
          if(arr_change[i].priority == 2) arr_days[j].count_p2++;
          if(arr_change[i].priority == 3) arr_days[j].count_p3++;
          if(arr_change[i].priority == 4) arr_days[j].count_p4++;
          arr_days[j].day_count++;
          arr_change[i].due_date_utc = arr_days[j].date;
          break;
        }
      }
      
    }
    //
    if(!need_change){
      for(var j = 0; j < arr_days.length; j++){
        if(arr_days[j].day_count < arr_days[j].day_max){
          if(arr_change[i].priority == 4 && (arr_days[j].day_count + 1) <= arr_days[j].day_max && !need_change){
            //need_change = true;
          }
          if(arr_change[i].priority == 3 && (arr_days[j].day_count + 1) <= arr_days[j].day_max && !need_change){
            //need_change = true;
          }
          if(need_change){
            if(arr_change[i].priority == 3) arr_days[j].count_p3++;
            if(arr_change[i].priority == 4) arr_days[j].count_p4++;
            arr_days[j].day_count++;
            arr_change[i].due_date_utc = arr_days[j].date;
            break;
          }
        }
      }
      
    }
  }
  //
  return (arr_change);
}
function getP(spreadsheetId, type)
{
  type = type.toUpperCase();
  var row_number = 0;
  var arr = [];
  if(type == "HOME") row_number = 7;
  if(type == "WORK") row_number = 8;
  for(var i=0;i<4;i++){
    var value = kts.getParamValue(row_number, spreadsheetId, i+3);
    arr.push(kts.getNumberString(value));
  }
  
  arr = kts.convertArrStringToNumber(arr);
  return (arr);
}
